# Generated by Django 5.0.4 on 2024-05-12 07:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE'), ('PENDING', 'PENDING')], default='INACTIVE', max_length=50)),
                ('amount', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', models.CharField(db_index=True, max_length=150)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE'), ('PENDING', 'PENDING')], default='INACTIVE', max_length=50)),
                ('public_name', models.CharField(max_length=150, verbose_name='Public Name')),
                ('type_component', models.CharField(choices=[('BTW', 'BTW'), ('CR', 'CR'), ('WEB', 'WEB')], default='BTW', max_length=50)),
                ('subtype_btw', models.CharField(blank=True, choices=[('ADULT BTW', 'ADULT BTW'), ('CORP BTW', 'CORP BTW'), ('DEFENSIVE BTW', 'DEFENSIVE BTW'), ('DRIVING LESSON', 'DRIVING LESSON'), ('FORFEIT BTW', 'FORFEIT BTW'), ('RANGE', 'RANGE'), ('ROAD TEST', 'ROAD TEST'), ('SIMULATOR', 'SIMULATOR'), ('TEEN BTW', 'TEEN BTW')], max_length=50, null=True)),
                ('subtype_web', models.CharField(blank=True, choices=[('EZ DRIVE', 'EZ DRIVE'), ('OTHER ONLINE COURSE', 'OTHER ONLINE COURSE'), ('SAFEWAY LMS', 'SAFEWAY LMS')], max_length=50, null=True)),
                ('driving_hours', models.TimeField()),
                ('enrolment_size', models.IntegerField(blank=True, default=0, null=True)),
                ('make_up_size', models.IntegerField(blank=True, default=0, null=True)),
                ('web_stu_enrolment', models.BooleanField(blank=True, help_text='Website/Student Portal Enrollment', null=True)),
                ('days', models.CharField(blank=True, choices=[('MON', 'MON'), ('TUE', 'TUE'), ('WED', 'WED'), ('THU', 'THU'), ('FRI', 'FRI'), ('SAT', 'SAT'), ('SUN', 'SUN')], default='MON', max_length=10, null=True)),
                ('number_sessions', models.IntegerField(blank=True, default=0, null=True)),
                ('sessions_day', models.IntegerField(blank=True, default=0, null=True)),
                ('session_duration', models.TimeField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.location')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE'), ('PENDING', 'PENDING')], default='INACTIVE', max_length=50)),
                ('code', models.CharField(db_index=True, max_length=150)),
                ('amount', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('expiration_data', models.DateField(default='1999/01/01')),
                ('classes', models.ManyToManyField(related_name='Discount_classes', to='location.class')),
                ('locations', models.ManyToManyField(related_name='Discount_locations', to='location.location')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answers', models.ManyToManyField(to='servises.answer')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servises.questiontype')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE'), ('PENDING', 'PENDING')], default='INACTIVE', max_length=50)),
                ('taxable', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('web_name', models.CharField(max_length=200)),
                ('web_description', models.TextField(blank=True, null=True)),
                ('enrolment_email', models.TextField(blank=True, help_text='Here you have to write email that will go every member registered to this service', null=True)),
                ('purchase', models.BooleanField(default=False)),
                ('portal_purchase', models.BooleanField(default=False)),
                ('oe', models.CharField(choices=[('NO CONTRACT NEEDED', 'NO CONTRACT NEEDED'), ('TEEN', 'TEEN'), ('ADULT', 'ADULT'), ('KNOWLEDGE TEST(KT)', 'KNOWLEDGE TEST(KT)'), ('ROAD TEST(RT)', 'ROAD TEST(RT)'), ('UPLOAD DOCUMENTS', 'UPLOAD DOCUMENTS')], default='NO CONTRACT NEEDED', help_text='Associate Contract From OE', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('add_ons', models.ManyToManyField(related_name='addons', to='servises.addon')),
                ('discount', models.ManyToManyField(blank=True, related_name='service_discount', to='servises.discount')),
                ('items', models.ManyToManyField(related_name='component_services', to='servises.component')),
                ('locations', models.ManyToManyField(related_name='location_services', to='location.location')),
            ],
        ),
        migrations.AddField(
            model_name='discount',
            name='services',
            field=models.ManyToManyField(related_name='Discount_services', to='servises.services'),
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DELETED', 'DELETED'), ('INACTIVE', 'INACTIVE')], default='INACTIVE', max_length=100)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('_is_display_name', models.BooleanField(default=False)),
                ('count', models.IntegerField(verbose_name='number of question')),
                ('passing_grade', models.IntegerField(default=1)),
                ('is_final', models.BooleanField(default=False)),
                ('is_class_session', models.BooleanField(default=False, verbose_name='Associate with This Class Session')),
                ('is_attendance_required', models.BooleanField(default=False, verbose_name='Attendance Required for Associated Session only')),
                ('timer', models.TimeField(blank=True)),
                ('is_timer', models.BooleanField(default=False)),
                ('allow_view_complete', models.BooleanField(default=False, verbose_name='Allow Students to View Completed Quizzes')),
                ('welcome_text', models.TextField(blank=True)),
                ('pass_text', models.TextField(blank=True)),
                ('fall_text', models.TextField(blank=True)),
                ('cr', models.ManyToManyField(related_name='classroom', to='location.class')),
                ('questions', models.ManyToManyField(to='servises.question')),
                ('service', models.ManyToManyField(to='servises.services')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
